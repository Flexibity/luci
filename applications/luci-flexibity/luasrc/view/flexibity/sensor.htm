<%#
LuCI - Lua Configuration Interface
Copyright 2008-2009 Steven Barth <steven@midlink.org>
Copyright 2008-2011 Jo-Philipp Wich <xm@subsignal.org>
Copyright 2012 Maxim Osipov <maxim.osipov@gmail.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0
-%>

<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript" src="<%=resource%>/jquery.min.js"></script>
<script type="text/javascript" src="<%=resource%>/highcharts.src.js"></script>
<script type="text/javascript" src="<%=resource%>/exporting.js"></script>

<h2><a id="content" name="content"><%:Measurements%></a></h2>

<div class="cbi-map" id="sensors">
</div>

<script type="text/javascript">//<![CDATA[
	<%local path = luci.dispatcher.context.requestpath%>
	<%local addr = path[#path]:gsub(":", "z")%>
	var addr = <%luci.http.write_json(addr)%>
	Highcharts.setOptions({global:{useUTC: false}});
	var charts = new Array();
	// Get data descriptor
	XHR.get('<%=luci.dispatcher.build_url("admin", "services", "sensors_poll", addr, "desc")%>', null,
		function(x, st) {
			if (st) {
				document.getElementById('sensors').innerHTML = "";
				for (var i in st.data) {
					var str = '<h2>' + i.toUpperCase() + ': <font id="val_' + i + '">...</font> ' + st.data[i] + '</h2>';
					str += '<fieldset class="cbi-section">';
					str += '<div id="plot_' + i + '" style="min-width: 400px; height: 200px; margin: 0 auto"></div>';
					str += '</fieldset>';
					document.getElementById('sensors').innerHTML += str;
					charts.push(new Highcharts.Chart({
						chart: { renderTo: 'plot_' + i, type: 'spline', marginRight: 10 },
						title: { text: i.toUpperCase() },
						xAxis: { type: 'datetime', tickPixelInterval: 150 },
						yAxis: { title: { text: 'Value (' + st.data[i] + ')' },
							plotLines: [{ value: 0, width: 1, color: '#808080' }] },
						tooltip: {
							formatter: function() {
								return '<b>'+ this.series.name +'</b><br/>'+
									Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) +'<br/>'+
									Highcharts.numberFormat(this.y, 2);
							}
						},
						legend: { enabled: false },
						exporting: { enabled: false },
						series: [{
							name: i.toUpperCase(),
							data: (function() {
								var data = [],
									time = (new Date()).getTime(),
									i;
								for (j = -19; j <= 0; j++) {
									data.push({ x: time + j * 1000, y: 0 });
								}
								return data;
							})()
						}]
					}));
				}
			}
		}
	);
	// Actually add data
	XHR.poll(1, '<%=luci.dispatcher.build_url("admin", "services", "sensors_poll", addr, "data")%>', null,
		function(x, st) {
			if (st) {
				var j = 0;
				for (var i in st) {
					document.getElementById("val_" + i).innerHTML = String.format('%s ', st[i]);
					charts[j].series[0].addPoint([new Date().getTime(), st[i]], true, true);
					j++;
				}
			}
		}
	);
//]]></script>

<%+footer%>

