<%#
LuCI - Lua Configuration Interface
Copyright 2008-2009 Steven Barth <steven@midlink.org>
Copyright 2008-2011 Jo-Philipp Wich <xm@subsignal.org>
Copyright 2012 Maxim Osipov <maxim.osipov@gmail.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0
-%>

<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript" src="<%=resource%>/jquery.min.js"></script>
<script type="text/javascript" src="<%=resource%>/highcharts.src.js"></script>
<script type="text/javascript" src="<%=resource%>/exporting.js"></script>

<h2><a id="content" name="content"><%:Measurements%></a></h2>

<div class="cbi-map" id="sensors">
	<fieldset class="cbi-section">
		<div id="plot" style="min-width: 400px; height: 400px; margin: 0 auto"></div>
	</fieldset>
</div>

<script type="text/javascript">//<![CDATA[
	<%local path = luci.dispatcher.context.requestpath%>
	<%local addr = path[#path]:gsub(":", "z")%>
	var addr = <%luci.http.write_json(addr)%>
	Highcharts.setOptions({global:{useUTC: false}});
	var chart;
	// Get data descriptor
	XHR.get('<%=luci.dispatcher.build_url("admin", "services", "sensors_poll", addr, "desc")%>', null,
		function(x, st) {
			if (st) {
				var y_axis = new Array();
				var series = new Array();
				var series_data = new Array();
				var time = (new Date()).getTime();
				for (k = -29; k <= 0; k++) {
					series_data.push({
						x: time + k * 1000,
						y: 0
					});
				}
				for (var i in st.data) {
					y_axis.push({
						lables: { formatter: function() { return this.value + st.data[i]; } },
						title: { text: i.toUpperCase() + ' (' + st.data[i] + ')' },
                                                plotLines: [{ value: 0, width: 1, color: '#808080' }]
					});
					series.push({
						name: i.toUpperCase(),
						type: 'spline',
						data: series_data
					});
				}
				chart = new Highcharts.Chart({
					title: { text: st.type + ' data' },
					chart: { renderTo: 'plot', type: 'spline', marginRight: 10 },
					xAxis: { type: 'datetime', tickPixelInterval: 150 },
					yAxis: y_axis,
					legend: { enabled: false },
					exporting: { enabled: false },
					series: series
				});
			}
		}
	);
	// Actually add data
	XHR.poll(1, '<%=luci.dispatcher.build_url("admin", "services", "sensors_poll", addr, "data")%>', null,
		function(x, st) {
			if (st) {
				var j = 0;
				for (var i in st) {
					chart.series[j].addPoint([(new Date()).getTime(), st[i]], true, true);
					j++;
				}
			}
		}
	);
//]]></script>

<%+footer%>

